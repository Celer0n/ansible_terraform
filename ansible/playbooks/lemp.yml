- hosts: front
  become: yes
  tasks:
    - name: Install Nginx
      apt:
        name: nginx
        state: present
        update_cache: true
        autoremove: true
        autoclean: true

    - name: Install PHP and required extensions
      apt:
        name: 
          - php-fpm
          - php-mysql
        state: present

    - name: Start and enable Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Create index.php
      copy:
        dest: /var/www/html/index.php
        content: |
          <?php
          $conn = new mysqli('{{ db_host }}', '{{ db_user }}', '{{ db_pass }}', '{{ db_name }}');
          if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
          }
          echo "Connected successfully to the database!";
          ?>
    - name: Configure Nginx to serve PHP files
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
              listen 80 default_server;
              root /var/www/html;
              index index.php index.html index.htm;
              location / {
                  try_files $uri $uri/ =404;
              }
              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/var/run/php/php-fpm.sock;
              }
              location ~ /\.ht {
                  deny all;
              }
          }
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

- hosts: backend
  become: yes
  tasks:
    - name: Install required MySQL packages
      apt:
        name:
          - python3-pymysql
          - mysql-server
        state: present
        update_cache: yes

    - name: Start and enable MySQL service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create a new database
      community.mysql.mysql_db:
        name: '{{ db_name }}'
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create database user
      community.mysql.mysql_user:
        name: '{{ db_user }}'
        password: '{{ db_pass }}'
        priv: '*.*:ALL'
        state: present
        host: '%' 
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Allow remote connections by updating bind address
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        state: present

    - name: Restart MySQL service
      service:
        name: mysql
        state: restarted