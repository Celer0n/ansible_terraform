- hosts: backend
  become: yes
  tasks:
    - name: Install required MySQL packages
      apt:
        name:
          - python3-pymysql
          - mysql-server
        state: present
        update_cache: yes

    - name: Install MariaDB
      apt:
        name: mariadb-server
        state: present
        update_cache: yes

    - name: Start and enable MariaDB service
      service:
        name: mariadb
        state: started
        enabled: yes

    - name: Set root password for MariaDB
      mysql_user:
        name: root
        password: "{{ db_root_password }}"
        host: '127.0.0.1'
        state: present

    - name: Create a database for the application
      mysql_db:
        name: app_db
        state: present

    - name: Create a user for the application
      mysql_user:
        name: app_user
        password: "{{ db_app_password }}"
        priv: '*.*:ALL'
        state: present
        host: '%'

- hosts: front
  become: yes
  tasks:
    - name: Install Nginx and PHP
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - nginx
        - php-fpm
        - php-mysql

    - name: Start and enable Nginx service
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Create index.php file
      copy:
        dest: /var/www/html/index.php
        content: |
          <?php
          $servername = "54.93.178.90";
          $username = "app_user";
          $password = "{{ db_app_password }}";
          $dbname = "app_db";

          $conn = new mysqli($servername, $username, $password, $dbname);

          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          echo "Connected successfully to the database!";
          ?>
    - name: Ensure Nginx is serving index.php
      lineinfile:
        path: /etc/nginx/sites-available/default
        regexp: 'index nginx-debian.html'
        line: 'index index.php index.html;'
      notify:
        - restart nginx

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted